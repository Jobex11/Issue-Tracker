==============  PART 2  =====================
time:  1:16:26

nb-> go to mosh.issue tracker on githun to get code.

WHAT YOU SHOULD KNOW 
- Client and Server componenets 
- Routing 
- Building APIs 
- Database integration with prism. 
- Authentication with Nextauth.js 
- Basics of TailwindCSS


=================
ROADMAP
=================
time 4:37  


HOW TO TAKE THIS COURSE 
best coding practicess . 
-> Watch -> Take Notes -> then try it yourself
PROJECT ROADMAP 
Mosh , I don't know how to start and finish a project. 
- Classify your features into Core(essential) and Advance features(nice to have)

CORE(essential) => ability to create an issues , viewing issues, updating an issures ,
delete an  issues , 

ADVANCE(nice to have) => user authentication, assigning issuesm sorting issues, 
filtering issures, pagination and dashboard. 
Refactoring -> make it work first . then improve it .

=================
SETTING UP THE DEVELOPMENT ENVIRONMENT.
=================
time 6:50 

installed vscode extensio for  
tailwindcss, prisma, typescript and react-redux extenstion. 


==================
CREATE A NEXTJS PROJECT.
===================
time:8:09


 pages or component. 
==================
STYLING THE ACTIVE LINK
===================
time 0:19:55

class was installed in this section. 


commit => Style the active link in the navbar.  


==================
INSTALLING MySQL
===================
time: 26:11

-in this section we are going to be using mysql 
for storing our data. 
-Mysql is a very popular database engine.
other database engines are  
Postgres, MongoDB and Mysql



-> download Mysql for window.
-> MySQl workbench for window.

==================

SETTING UP PRISMA
===================
time:28:11 

After inalling prisma 
after running npx prisma two things happened. 
-It creates a prisma folder


commit => Setup prisma 


==================
CREATING THE ISSUE MODEL
===================
time: 29:58 

=> mysql configuration file have not successfully complete.


commit => create the issue model

==================
 BUILDING AN API
==================
time: 36:38 

to store issues we have to create api that clients can call.. 

for data validation we use Zod
===> serious Error on vdo
============
SETTING UP RADIX UI
============
Time:43:34
radix ui is very good component library.

============
CUSTOMIZING RADIZ UI THEME
============
Time:51:07


============
BUILD THE NEW ISSUE PAGE 
============
Time: 46:07 

============
ADDING A MARKDOWN EDITOR
============
Time: 56:58


============
HANDLING FORM SUBMISSION
============
Time: 58:56


to send the data to an api we use axios.

============
HANDLING ERRORS
============
Time: 1:07:38

===========
IMPLEMENTING CLIENT-SIDE VALIDATION
===========
time: 1:14:29


===========
EXTRACTING THE ERROR MESSAGE COMPONENT
===========
time: 1:20:46

    =========  NPM INSTALLATION   =========== 

    downloaded mysql 
    downloaded datagrid form jetbrains
    - npm install react-icons --save 
    - npm i react-icons@4.11.0
    - npm i classnames@2.3.2
    - npm i prisma@5.3.1
    - npm install @prisma/client
    - npx prisma init
    - npx prisma format  (arrange the prisma file.)
    - npx prisma migrate dev
    - npm i zod@3.22.2
    - npm install @radix-ui/themes [he installed version 1.1.2 which i didn't]
    - npm install --save react-simplemde-editor easymde
    - npm i react-hook-form@7.46.1
    - npm i axios@1.5.0
    - npm i @hookform/resolvers@3.3.1

    -> the version of prisma running on my device might be diferent form 
    the one written above.
    -> 
    =========   ERRORS AND DEBUGGING   ========
    1. error from prisma.client in the postman
    2. the font didn't change form apple to inter which is used by nextjs 
    application by default. 
    apple font is used by radix ui compnents.